const CODE_39_LOOKUP_TABLE = {
	"0": "111221211",
	"1": "211211112",
	"2": "112211112",
	"3": "212211111",
	"4": "111221112",
	"5": "211221111",
	"6": "112221111",
	"7": "111211212",
	"8": "211211211",
	"9": "112211211",
	"A": "211112112",
	"B": "112112112",
	"C": "212112111",
	"D": "111122112",
	"E": "211122111",
	"F": "112122111",
	"G": "111112212",
	"H": "211112211",
	"I": "112112211",
	"J": "111122211",
	"K": "211111122",
	"L": "112111122",
	"M": "212111121",
	"N": "111121122",
	"O": "211121121",
	"P": "112121121",
	"Q": "111111222",
	"R": "211111221",
	"S": "112111221",
	"T": "111121221",
	"U": "221111112",
	"V": "122111112",
	"W": "222111111",
	"X": "121121112",
	"Y": "221121111",
	"Z": "122121111",
	"-": "121111212",
	".": "221111211",
	" ": "122111211",
	"$": "121212111",
	"/": "121211121",
	"+": "121112121",
	"%": "111212121",
	"*": "121121211",
}

const CODABAR_LOOKUP_TABLE = {
    "0": "101010001110", "1": "101011100010", "2": "101000101110", "3": "111000101010",
    "4": "101110100010", "5": "111010100010", "6": "100010101110", "7": "100010111010",
    "8": "100011101010", "9": "111010001010", "-": "101000111010", "$": "101110001010",
    ":": "11101011101110", "/": "11101110101110", ".": "11101110111010", "+": "101110001110001110",
    "A": "10111000100010", "B": "10001000101110", "C": "10100010001110", "D": "10100011100010"
}

const CODE_128A_LOOKUP_TABLE = {
    " ": ["11011001100", 0], "!": ["11001101100", 1], "\"": ["11001100110", 2], "#": ["10010011000", 3], "$": ["10010001100", 4], "%": ["10001001100", 5], "&": ["10011001000", 6], "'": ["10011000100", 7], "(": ["10001100100", 8], ")": ["11001001000", 9], "*": ["11001000100", 10], "+": ["11000100100", 11], ",": ["10110011100", 12], "-": ["10011011100", 13], ".": ["10011001110", 14], "/": ["10111001100", 15], "0": ["10011101100", 16], "1": ["10011100110", 17], "2": ["11001110010", 18], "3": ["11001011100", 19], "4": ["11001001110", 20], "5": ["11011100100", 21], "6": ["11001110100", 22], "7": ["11101101110", 23], "8": ["11101001100", 24], "9": ["11100101100", 25], ":": ["11100100110", 26], ";": ["11101100100", 27], "<": ["11100110100", 28], "=": ["11100110010", 29], ">": ["11011011000", 30], "?": ["11011000110", 31], "@": ["11000110110", 32], "A": ["10100011000", 33], "B": ["10001011000", 34], "C": ["10001000110", 35], "D": ["10110001000", 36], "E": ["10001101000", 37], "F": ["10001100010", 38], "G": ["11010001000", 39], "H": ["11000101000", 40], "I": ["11000100010", 41], "J": ["10110111000", 42], "K": ["10110001110", 43], "L": ["10001101110", 44], "M": ["10111011000", 45], "N": ["10111000110", 46], "O": ["10001110110", 47], "P": ["11101110110", 48], "Q": ["11010001110", 49], "R": ["11000101110", 50], "S": ["11011101000", 51], "T": ["11011100010", 52], "U": ["11011101110", 53], "V": ["11101011000", 54], "W": ["11101000110", 55], "X": ["11100010110", 56], "Y": ["11101101000", 57], "Z": ["11101100010", 58], "[": ["11100011010", 59], "\\": ["11101111010", 60], "]": ["11001000010", 61], "^": ["11110001010", 62], "_": ["10100110000", 63], "NUL": ["10100001100", 64], "SOH": ["10010110000", 65], "STX": ["10010000110", 66], "ETX": ["10000101100", 67], "EOT": ["10000100110", 68], "ENQ": ["10110010000", 69], "ACK": ["10110000100", 70], "BEL": ["10011010000", 71], "BS": ["10011000010", 72], "HT": ["10000110100", 73], "LF": ["10000110010", 74], "VT": ["11000010010", 75], "FF": ["11001010000", 76], "CR": ["11110111010", 77], "SO": ["11000010100", 78], "SI": ["10001111010", 79], "DLE": ["10100111100", 80], "DC1": ["10010111100", 81], "DC2": ["10010011110", 82], "DC3": ["10111100100", 83], "DC4": ["10011110100", 84], "NAK": ["10011110010", 85], "SYN": ["11110100100", 86], "ETB": ["11110010100", 87], "CAN": ["11110010010", 88], "EM": ["11011011110", 89], "SUB": ["11011110110", 90], "ESC": ["11110110110", 91], "FS": ["10101111000", 92], "GS": ["10100011110", 93], "RS": ["10001011110", 94], "US": ["10111101000", 95], "FNC 3": ["10111100010", 96], "FNC 2": ["11110101000", 97], "Shift B": ["11110100010", 98], "Code C": ["10111011110", 99], "Code B": ["10111101110", 100], "FNC 4": ["11101011110", 101], "FNC 1": ["11110101110", 102], 
}

const CODE_128B_LOOKUP_TABLE = {
    " ": ["11011001100", 0], "!": ["11001101100", 1], "\"": ["11001100110", 2], "#": ["10010011000", 3], "$": ["10010001100", 4], "%": ["10001001100", 5], "&": ["10011001000", 6], "'": ["10011000100", 7], "(": ["10001100100", 8], ")": ["11001001000", 9], "*": ["11001000100", 10], "+": ["11000100100", 11], ",": ["10110011100", 12], "-": ["10011011100", 13], ".": ["10011001110", 14], "/": ["10111001100", 15], "0": ["10011101100", 16], "1": ["10011100110", 17], "2": ["11001110010", 18], "3": ["11001011100", 19], "4": ["11001001110", 20], "5": ["11011100100", 21], "6": ["11001110100", 22], "7": ["11101101110", 23], "8": ["11101001100", 24], "9": ["11100101100", 25], ":": ["11100100110", 26], ";": ["11101100100", 27], "<": ["11100110100", 28], "=": ["11100110010", 29], ">": ["11011011000", 30], "?": ["11011000110", 31], "@": ["11000110110", 32], "A": ["10100011000", 33], "B": ["10001011000", 34], "C": ["10001000110", 35], "D": ["10110001000", 36], "E": ["10001101000", 37], "F": ["10001100010", 38], "G": ["11010001000", 39], "H": ["11000101000", 40], "I": ["11000100010", 41], "J": ["10110111000", 42], "K": ["10110001110", 43], "L": ["10001101110", 44], "M": ["10111011000", 45], "N": ["10111000110", 46], "O": ["10001110110", 47], "P": ["11101110110", 48], "Q": ["11010001110", 49], "R": ["11000101110", 50], "S": ["11011101000", 51], "T": ["11011100010", 52], "U": ["11011101110", 53], "V": ["11101011000", 54], "W": ["11101000110", 55], "X": ["11100010110", 56], "Y": ["11101101000", 57], "Z": ["11101100010", 58], "[": ["11100011010", 59], "\\": ["11101111010", 60], "]": ["11001000010", 61], "^": ["11110001010", 62], "_": ["10100110000", 63], "`": ["10100001100", 64], "a": ["10010110000", 65], "b": ["10010000110", 66], "c": ["10000101100", 67], "d": ["10000100110", 68], "e": ["10110010000", 69], "f": ["10110000100", 70], "g": ["10011010000", 71], "h": ["10011000010", 72], "i": ["10000110100", 73], "j": ["10000110010", 74], "k": ["11000010010", 75], "l": ["11001010000", 76], "m": ["11110111010", 77], "n": ["11000010100", 78], "o": ["10001111010", 79], "p": ["10100111100", 80], "q": ["10010111100", 81], "r": ["10010011110", 82], "s": ["10111100100", 83], "t": ["10011110100", 84], "u": ["10011110010", 85], "v": ["11110100100", 86], "w": ["11110010100", 87], "x": ["11110010010", 88], "y": ["11011011110", 89], "z": ["11011110110", 90], "{": ["11110110110", 91], "|": ["10101111000", 92], "}": ["10100011110", 93], "~": ["10001011110", 94], "DEL": ["10111101000", 95], "FNC 3": ["10111100010", 96], "FNC 2": ["11110101000", 97], "Shift A": ["11110100010", 98], "Code C": ["10111011110", 99], "FNC 4": ["10111101110", 100], "Code A": ["11101011110", 101], "FNC 1": ["11110101110", 102], 
}

const CODE_128C_LOOKUP_TABLE = {
    "00": ["11011001100", 0], "01": ["11001101100", 1], "02": ["11001100110", 2], "03": ["10010011000", 3], "04": ["10010001100", 4], "05": ["10001001100", 5], "06": ["10011001000", 6], "07": ["10011000100", 7], "08": ["10001100100", 8], "09": ["11001001000", 9], "10": ["11001000100", 10], "11": ["11000100100", 11], "12": ["10110011100", 12], "13": ["10011011100", 13], "14": ["10011001110", 14], "15": ["10111001100", 15], "16": ["10011101100", 16], "17": ["10011100110", 17], "18": ["11001110010", 18], "19": ["11001011100", 19], "20": ["11001001110", 20], "21": ["11011100100", 21], "22": ["11001110100", 22], "23": ["11101101110", 23], "24": ["11101001100", 24], "25": ["11100101100", 25], "26": ["11100100110", 26], "27": ["11101100100", 27], "28": ["11100110100", 28], "29": ["11100110010", 29], "30": ["11011011000", 30], "31": ["11011000110", 31], "32": ["11000110110", 32], "33": ["10100011000", 33], "34": ["10001011000", 34], "35": ["10001000110", 35], "36": ["10110001000", 36], "37": ["10001101000", 37], "38": ["10001100010", 38], "39": ["11010001000", 39], "40": ["11000101000", 40], "41": ["11000100010", 41], "42": ["10110111000", 42], "43": ["10110001110", 43], "44": ["10001101110", 44], "45": ["10111011000", 45], "46": ["10111000110", 46], "47": ["10001110110", 47], "48": ["11101110110", 48], "49": ["11010001110", 49], "50": ["11000101110", 50], "51": ["11011101000", 51], "52": ["11011100010", 52], "53": ["11011101110", 53], "54": ["11101011000", 54], "55": ["11101000110", 55], "56": ["11100010110", 56], "57": ["11101101000", 57], "58": ["11101100010", 58], "59": ["11100011010", 59], "60": ["11101111010", 60], "61": ["11001000010", 61], "62": ["11110001010", 62], "63": ["10100110000", 63], "64": ["10100001100", 64], "65": ["10010110000", 65], "66": ["10010000110", 66], "67": ["10000101100", 67], "68": ["10000100110", 68], "69": ["10110010000", 69], "70": ["10110000100", 70], "71": ["10011010000", 71], "72": ["10011000010", 72], "73": ["10000110100", 73], "74": ["10000110010", 74], "75": ["11000010010", 75], "76": ["11001010000", 76], "77": ["11110111010", 77], "78": ["11000010100", 78], "79": ["10001111010", 79], "80": ["10100111100", 80], "81": ["10010111100", 81], "82": ["10010011110", 82], "83": ["10111100100", 83], "84": ["10011110100", 84], "85": ["10011110010", 85], "86": ["11110100100", 86], "87": ["11110010100", 87], "88": ["11110010010", 88], "89": ["11011011110", 89], "90": ["11011110110", 90], "91": ["11110110110", 91], "92": ["10101111000", 92], "93": ["10100011110", 93], "94": ["10001011110", 94], "95": ["10111101000", 95], "96": ["10111100010", 96], "97": ["11110101000", 97], "98": ["11110100010", 98], "99": ["10111011110", 99], "Code B": ["10111101110", 100], "Code A": ["11101011110", 101], "FNC 1": ["11110101110", 102], 
}

String.prototype.removeCharIfExists = function (char) {
    if (this.charAt(this.length - 1) == char) {
        return this.substr(0, this.length - 1);
    } else {
        return this;
    }
}

function isNumeric(str) {
    return !isNaN(str) && !isNaN(parseInt(str));
}

function generatePNGFromBinary(binary) {
    let barWidth = 2;
    let vspacing = 10;
    let spacingForNumbers = 0;
    let hspacing = 20;
    let barHeight = 100;

    let canvas = document.createElement("canvas");
    canvas.width = (binary.length * barWidth) + (2 * hspacing);
    canvas.height = barHeight + (2 * vspacing) + spacingForNumbers;
    let ctx = canvas.getContext("2d");
    let image = ctx.createImageData(canvas.width, canvas.height);
    let data = image.data;

    ctx.beginPath();
    ctx.fillStyle = "#fff";
    ctx.fillRect(0, 0, canvas.width,canvas.height);
    ctx.fill();

    for (let i = 0; i < binary.length; i++) {
        if (binary[i] == "1") {
            for (let w = 0; w < barWidth; w++) {
                for (let h = 0; h < barHeight; h++) {
                    data[4 * ((hspacing + (i * barWidth) + w) + (canvas.width * (vspacing + h)))] = 0;
                    data[4 * ((hspacing + (i * barWidth) + w) + (canvas.width * (vspacing + h))) + 1] = 0;
                    data[4 * ((hspacing + (i * barWidth) + w) + (canvas.width * (vspacing + h))) + 2] = 0;
                    data[4 * ((hspacing + (i * barWidth) + w) + (canvas.width * (vspacing + h))) + 3] = 255;
                }
            }
        }
    }

    ctx.putImageData(image, 0, 0);

    return canvas.toDataURL();
}

function generatePNGFromBitArray(bitarr) {

}

function ecode39(code) {
    let output = "";
    for (let i = 0; i < code.length; i++) {
        output += CODE_39_LOOKUP_TABLE[code[i]] + "0"
    }

    let code39Code = CODE_39_LOOKUP_TABLE["*"] + "0" + output.removeCharIfExists("0") + "0" + CODE_39_LOOKUP_TABLE["*"];

    let finalOutput = "";
    code39Code.split("0").forEach(s => {
        for (let i = 0; i < 9; i++) {
            if (i % 2 == 0) {
                if (s.charAt(i) == "1") {
                    finalOutput += "1";
                } else {
                    finalOutput += "111";
                }
            } else {
                if (s.charAt(i) == "1") {
                    finalOutput += "0";
                } else {
                    finalOutput += "000";
                }
            }
        }
        finalOutput += "0";
    });

    return generatePNGFromBinary(finalOutput.substr(0, finalOutput.length-1));
}

function dcode39(code) {

}

function ecodabar(code) {
    let output = "";
    for (let i = 0; i < code.length; i++) {
        output += CODABAR_LOOKUP_TABLE[code[i]];
    }

    return generatePNGFromBinary(CODABAR_LOOKUP_TABLE["A"] + output + CODABAR_LOOKUP_TABLE["B"]);
}

function dcodabar(code) {
    
}

function ecode128(code) {
    function charToName(c) {
        switch (c) {
        case "\n":
            return "LF";
        default:
            return c;
        }
    }

    if (code == "") return generatePNGFromBinary("0");
    let output = "";
    let sum = 0;
    let currentMode = "";

    if (isNumeric(code)) {
        console.log(parseInt(code))
        output += "11010011100";
        currentMode = "C";
        sum = 105;
    } else if (code.toUpperCase() == code) {
        output += "11010000100";
        currentMode = "A";
        sum = 103;
    } else {
        output += "11010010000";
        currentMode = "B";
        sum = 104;
    }

    for (let i = 0; i < code.length; i++) {
        let current = code[i];
        if (currentMode === "A") {
            if (Object.keys(CODE_128A_LOOKUP_TABLE).includes(current)) {
                output += CODE_128A_LOOKUP_TABLE[charToName(current)][0];
                sum += CODE_128A_LOOKUP_TABLE[charToName(current)][1] * (i + 1);
            } else {
                output += CODE_128A_LOOKUP_TABLE["Code B"][0];
                sum += CODE_128A_LOOKUP_TABLE["Code B"][1] * (i + 1);
                currentMode = "B";

                output += CODE_128B_LOOKUP_TABLE[current][0];
                sum += CODE_128B_LOOKUP_TABLE[current][1] * (i + 1);
            }
        } else if (currentMode === "B") {
            if (Object.keys(CODE_128B_LOOKUP_TABLE).includes(current)) {
                output += CODE_128B_LOOKUP_TABLE[current][0];
                sum += CODE_128B_LOOKUP_TABLE[current][1] * (i + 1);
            } else {
                output += CODE_128B_LOOKUP_TABLE["Shift A"][0];
                sum += CODE_128B_LOOKUP_TABLE["Shift A"][1] * (i + 1);
                
                output += CODE_128A_LOOKUP_TABLE[charToName(current)][0];
                sum += CODE_128A_LOOKUP_TABLE[charToName(current)][1] * (i + 1);
            }
        } else {
            if (Object.keys(CODE_128B_LOOKUP_TABLE).includes(current)) {
                output += CODE_128B_LOOKUP_TABLE[current][0];
                sum += CODE_128B_LOOKUP_TABLE[current][1] * (i + 1);
            } else {
                output += CODE_128C_LOOKUP_TABLE["Code B"][0];
                sum += CODE_128C_LOOKUP_TABLE["Code B"][1] * (i + 1);
                currentMode = "B";

                output += CODE_128B_LOOKUP_TABLE[current][0];
                sum += CODE_128B_LOOKUP_TABLE[current][1] * (i + 1);
            }
        }
    }

    sum %= 103;

    Object.entries(CODE_128A_LOOKUP_TABLE).forEach(([key, value]) => {
        if (value[1] == sum) {
            output += value[0];
            return;
        }
    });

    output += "1100011101011";
    return generatePNGFromBinary(output);
}

function dcode128(code) {
    
}
